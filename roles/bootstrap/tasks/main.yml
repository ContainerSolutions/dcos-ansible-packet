---
- name: Ensures genconf dir exists
  file: path=genconf state=directory
  tags: genconf

- name: Copy ip-detect script
  copy: src=files/ip-detect dest=/root/genconf/ip-detect owner=root group=root mode=0755
  tags: ipdetect

- name: Copy config.yaml template
  template: src=templates/config.yaml.j2 dest=/root/genconf/config.yaml owner=root group=root
  tags: config

- name: Download dcos_generate_config.sh
  get_url:
    url: "{{ dcos_download_url }}"
    dest: /root/dcos_generate_config.sh
    mode: 755
  tags: dcos_generate_config
  when: not ansible_check_mode

- name: Execute dcos_generate_config.sh
  shell: /root/dcos_generate_config.sh
  args:
   creates: /etc/systemd/system/dcos.target
  tags: dcos_generate_config
  when: not ansible_check_mode

- name: Add repository
  yum_repository:
    name: extras
    description: EPEL YUM repo
    baseurl: "{{ epel_repo_url }}"
  tags: nginx

- name: Ensure epel-release is installed
  yum: pkg=epel-release state=installed enablerepo=extras   
  tags: nginx

- name: upgrade all packages
  yum: name=* state=latest
  tags: nginx
  when: not ansible_check_mode

- name: Ensure pip is installed
  yum: pkg=python2-pip state=installed 
  tags: nginx

- name: Ensure old docker-py module is absent
  pip:
    name: docker-py
    state: absent
  tags: nginx

- name: Ensure docker module is present
  pip:
    name: docker
  tags: nginx
  
- name: Ensure docker-compose module is present
  pip:
    name: docker-compose
  tags: nginx  
    
- name: Ensure nginx container is running
  tags: nginx
  docker_container:
    name: bootstrap-nginx
    state: started
    command: nginx -g "daemon off;"
    image: nginx:1.13
    volumes:
      - "/root/genconf/serve:/usr/share/nginx/html:ro" 
    ports:
      - "{{ bootstrap_server_port }}:80"
